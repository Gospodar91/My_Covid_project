{"version":3,"sources":["components/covid19/CovidItem/covidItem.module.css","components/covid19/CovidList/covidList.module.css","components/covid19/CovidItem/CovidItem.js","components/covid19/CovidList/CovidList.js","components/covid19/operations/Operations.js"],"names":["module","exports","CovidItem","maxConfirmed","maxDead","totalRecovered","console","log","className","css","infoFirst","map","country","key","Country","countryLi","liDiv","TotalConfirmed","toLocaleString","NewConfirmed","infoSecond","TotalDeaths","NewDeaths","infoThird","TotalRecovered","NewRecovered","latestNewsDiv","maxConfirmedDiv","CovidList","state","summaryAray","TotalStat","sort","b","a","slice","setState","operations","getSummary","then","data","Countries","this","container","div_wrapper","Component","newsKey","PNotify","defaults","delay","axios","get","Error","getFlag","searchQuery","total","error","title","text","getNews","getSearchnews","totalResults"],"mappings":"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","file":"static/js/7.2dbb38ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"maxConfirmed\":\"covidItem_maxConfirmed__35Vl_\",\"Ul\":\"covidItem_Ul__2zlYK\",\"countryLi\":\"covidItem_countryLi__3y2DT\",\"country\":\"covidItem_country__2I0jI\",\"info\":\"covidItem_info__1XKLn\",\"latestNewsDiv\":\"covidItem_latestNewsDiv__1ZpKs\",\"infoFirst\":\"covidItem_infoFirst__2nHxU\",\"infoSecond\":\"covidItem_infoSecond__2LuJp\",\"infoThird\":\"covidItem_infoThird__2imQ-\",\"maxConfirmedDiv\":\"covidItem_maxConfirmedDiv__lNXDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"covidList_container__3Sd3e\"};","import React from \"react\";\r\nimport css from \"../CovidItem/covidItem.module.css\";\r\n\r\nconst CovidItem = ({ maxConfirmed, maxDead, totalRecovered }) => {\r\n  console.log(\"maxDead\", maxDead);\r\n  return (\r\n    <> \r\n    {maxConfirmed&&\r\n    <>\r\n      <div>\r\n       \r\n        <h2 className={css.infoFirst}> Top Total Cases</h2>\r\n        <ul className={css.maxConfirmed}>\r\n          {maxConfirmed.map((country) => (\r\n            <li key={country.Country} className={css.countryLi}>\r\n              <div className={css.liDiv}>\r\n                <h2 className={css.country}>{country.Country}</h2>\r\n                <p className={css.infoFirst}>\r\n                  Total cases:{country.TotalConfirmed.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoFirst}>\r\n                  New cases:{country.NewConfirmed.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoSecond}>\r\n                  Total deaths:{country.TotalDeaths.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoSecond}>\r\n                  New deaths:{country.NewDeaths.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoThird}>\r\n                  Total recovered:{country.TotalRecovered.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoThird}>\r\n                  New recovered:{country.NewRecovered.toLocaleString()}\r\n                </p>\r\n          \r\n              </div>\r\n              \r\n\r\n              <div className={css.latestNewsDiv}></div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h2 className={css.infoSecond}> Top Total Deaths</h2>\r\n        <ul className={css.maxConfirmed}>\r\n          {maxDead.map((country) => (\r\n            <li key={country.Country} className={css.countryLi}>\r\n              <div className={css.liDiv}>\r\n                <h2 className={css.country}>{country.Country}</h2>\r\n                <p className={css.infoSecond}>\r\n                  Total deaths:\r\n                  {country.TotalDeaths.toLocaleString().toLocaleString()}\r\n                </p>\r\n                <p className={css.infoSecond}>\r\n                  New deaths:\r\n                  {country.NewDeaths.toLocaleString().toLocaleString()}\r\n                </p>\r\n                <p className={css.infoFirst}>\r\n                  Total cases:\r\n                  {country.TotalConfirmed.toLocaleString().toLocaleString()}\r\n                </p>\r\n                <p className={css.infoFirst}>\r\n                  New cases:\r\n                  {country.NewConfirmed.toLocaleString().toLocaleString()}\r\n                </p>\r\n                <p className={css.infoThird}>\r\n                  Total recovered:\r\n                  {country.TotalRecovered.toLocaleString().toLocaleString()}\r\n                </p>\r\n                <p className={css.infoThird}>\r\n                  New recovered:\r\n                  {country.NewRecovered.toLocaleString().toLocaleString()}\r\n                </p>\r\n              </div>\r\n              <div className={css.latestNewsDiv}></div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className={css.maxConfirmedDiv}>\r\n        <h2 className={css.infoThird}> Top Total Recovered</h2>\r\n        <ul className={css.maxConfirmed}>\r\n          {totalRecovered.map((country) => (\r\n            <li key={country.Country} className={css.countryLi}>\r\n              <div className={css.liDiv}>\r\n                <h2 className={css.country}>{country.Country}</h2>\r\n                <p className={css.infoThird}>\r\n                  Total recovered:{country.TotalRecovered.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoThird}>\r\n                  New recovered:{country.NewRecovered.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoSecond}>\r\n                  Total deaths:{country.TotalDeaths.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoSecond}>\r\n                  New deaths:{country.NewDeaths.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoFirst}>\r\n                  Total cases:{country.TotalConfirmed.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoFirst}>\r\n                  New cases:{country.NewConfirmed.toLocaleString()}\r\n                </p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      </>\r\n    }\r\n    </>\r\n  );\r\n};\r\nexport default CovidItem;\r\n","import React, { Component } from \"react\";\r\nimport CovidItem from \"../CovidItem/CovidItem\";\r\nimport { operations } from \"../operations/Operations\";\r\n\r\nimport css from \"./covidList.module.css\";\r\nclass CovidList extends Component {\r\n  state = {\r\n    summaryAray: [],\r\n    maxConfirmed: [],\r\n    maxDead: [],\r\n    totalRecovered: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await operations\r\n      .getSummary()\r\n      .then((data) => this.setState({ summaryAray: data.data.Countries }));\r\n    await this.TotalStat();\r\n  }\r\n\r\n  TotalStat = () => {\r\n    const maxConfirmed = this.state.summaryAray\r\n      .sort((b, a) => a.TotalConfirmed - b.TotalConfirmed)\r\n      .slice([0], [5]);\r\n    const maxDead = this.state.summaryAray\r\n      .sort((b, a) => a.TotalDeaths - b.TotalDeaths)\r\n      .slice([0], [5]);\r\n    const totalRecovered = this.state.summaryAray\r\n      .sort((b, a) => a.TotalRecovered - b.TotalRecovered)\r\n      .slice([0], [5]);\r\n    this.setState({\r\n      maxConfirmed: maxConfirmed,\r\n      maxDead: maxDead,\r\n      totalRecovered: totalRecovered,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { summaryAray, maxConfirmed, maxDead, totalRecovered } = this.state;\r\n\r\n    console.log(\"summaryAray\", summaryAray);\r\n    return (\r\n      <>\r\n        <div className={css.container}>\r\n          <div className={css.div_wrapper}>\r\n            <CovidItem\r\n              maxConfirmed={maxConfirmed}\r\n              maxDead={maxDead}\r\n              totalRecovered={totalRecovered}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default CovidList;\r\n","import axios from \"axios\";\r\nimport PNotify from \"pnotify/dist/es/PNotify.js\";\r\nconst KEY = \"15302072-a81be31270c5e4995077a81d4\";\r\nconst newsKey = \"65cb0b3a150c4ecfb6031d583c73fa16\";\r\nPNotify.defaults.delay = 1800;\r\nexport const operations = {\r\n  async getSummary() {\r\n    try {\r\n      const data = await axios.get(`https://api.covid19api.com/summary`);\r\n      return data;\r\n    } catch (error) {\r\n      console.log(\"GetSummaryError\", error);\r\n      throw new Error();\r\n    }\r\n  },\r\n  \r\n\r\n\r\n  async getFlag(searchQuery) {\r\n    try {\r\n      const data = await axios.get(\r\n        `https://pixabay.com/api/?key=${KEY}&q=${searchQuery}+flag&per+page=3&image_type=photo`\r\n      );\r\n      if(data.data.total===0){\r\n        PNotify.error({ title: \"Sorry:\" , text: \"Please write correct country\" });\r\n      }\r\n    \r\n      return data;\r\n    } catch (error) {\r\n      console.log(\"GetSummaryError\", error);\r\n      throw new Error();\r\n    }\r\n  },\r\n\r\n  async getNews() {\r\n    try {\r\n      const data = await axios.get(\r\n        `https://newsapi.org/v2/everything?qInTitle=covid&language=en&pageSize=5&sortBy=publishedAt&apiKey=${newsKey}`\r\n      );\r\n     \r\n      return data;\r\n      \r\n    } catch (error) {\r\n      console.log(\"GetNewsError\", error);\r\n      throw new Error();\r\n    }\r\n  },\r\n\r\n  async getSearchnews(country) {\r\n    try {\r\n      const data = await axios.get(\r\n        `https://newsapi.org/v2/everything?qInTitle=covid+${country}&pageSize=5&sortBy=publishedAt&apiKey=${newsKey}`\r\n      );  console.log(\"DATA NEWS\", data);\r\n       if(data.data.totalResults===0){\r\n        PNotify.error({ title: \"Sorry:\" , text: \"News are unavailable now\" });\r\n      }\r\n      return data;\r\n    } catch (error) {\r\n      console.log(\"GetNewsError\", error);\r\n      throw new Error();\r\n    }\r\n  },\r\n};\r\n"],"sourceRoot":""}