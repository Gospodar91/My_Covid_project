{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\covid_project\\\\covid_projest\\\\src\\\\components\\\\covid19\\\\CovidList\\\\CovidList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport CovidItem from \"../CovidItem/CovidItem\";\nimport { operations } from \"../operations/Operations\";\nimport css from \"./covidList.module.css\";\nexport const CovidList = () => {\n  useEffect(() => {\n    getSummaryArray();\n  }, []);\n  const [summaryAray, setSummaryArry] = useState();\n\n  const getSummaryArray = () => {\n    operations.getSummary().then(data => setSummaryArry(data.data.Countries));\n  };\n\n  let maxConfirmed, maxDead, totalRecovered;\n\n  if (summaryAray) {\n    maxConfirmed = summaryAray.sort((b, a) => a.TotalConfirmed - b.TotalConfirmed).slice([0], [5]);\n    maxDead = summaryAray.sort((b, a) => a.TotalDeaths - b.TotalDeaths).slice([0], [5]);\n    totalRecovered = summaryAray.sort((b, a) => a.TotalRecovered - b.TotalRecovered).slice([0], [5]);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: css.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.div_wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(CovidItem, {\n    maxConfirmed: maxConfirmed,\n    maxDead: maxDead,\n    totalRecovered: totalRecovered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["E:/React/covid_project/covid_projest/src/components/covid19/CovidList/CovidList.js"],"names":["React","useEffect","useState","CovidItem","operations","css","CovidList","getSummaryArray","summaryAray","setSummaryArry","getSummary","then","data","Countries","maxConfirmed","maxDead","totalRecovered","sort","b","a","TotalConfirmed","slice","TotalDeaths","TotalRecovered","container","div_wrapper"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7BL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,EAA9C;;AACA,QAAMK,eAAe,GAAG,MAAM;AAC5BH,IAAAA,UAAU,CAACM,UAAX,GAAwBC,IAAxB,CAA8BC,IAAD,IAAUH,cAAc,CAACG,IAAI,CAACA,IAAL,CAAUC,SAAX,CAArD;AACD,GAFD;;AAGA,MAAIC,YAAJ,EAAkBC,OAAlB,EAA2BC,cAA3B;;AACA,MAAIR,WAAJ,EAAiB;AACfM,IAAAA,YAAY,GAAGN,WAAW,CACvBS,IADY,CACP,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,cAAF,GAAmBF,CAAC,CAACE,cADxB,EAEZC,KAFY,CAEN,CAAC,CAAD,CAFM,EAED,CAAC,CAAD,CAFC,CAAf;AAGAN,IAAAA,OAAO,GAAGP,WAAW,CAClBS,IADO,CACF,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACG,WAAF,GAAgBJ,CAAC,CAACI,WAD1B,EAEPD,KAFO,CAED,CAAC,CAAD,CAFC,EAEI,CAAC,CAAD,CAFJ,CAAV;AAGAL,IAAAA,cAAc,GAAGR,WAAW,CACzBS,IADc,CACT,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACI,cAAF,GAAmBL,CAAC,CAACK,cADtB,EAEdF,KAFc,CAER,CAAC,CAAD,CAFQ,EAEH,CAAC,CAAD,CAFG,CAAjB;AAGD;;AACD,SACE,0CACE;AAAK,IAAA,SAAS,EAAEhB,GAAG,CAACmB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEnB,GAAG,CAACoB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAEX,YADhB;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,cAAc,EAAEC,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAaD,CAjCM","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport CovidItem from \"../CovidItem/CovidItem\";\r\nimport { operations } from \"../operations/Operations\";\r\nimport css from \"./covidList.module.css\";\r\nexport const CovidList = () => {\r\n  useEffect(() => {\r\n    getSummaryArray();\r\n  }, []);\r\n  const [summaryAray, setSummaryArry] = useState();\r\n  const getSummaryArray = () => {\r\n    operations.getSummary().then((data) => setSummaryArry(data.data.Countries));\r\n  };\r\n  let maxConfirmed, maxDead, totalRecovered;\r\n  if (summaryAray) {\r\n    maxConfirmed = summaryAray\r\n      .sort((b, a) => a.TotalConfirmed - b.TotalConfirmed)\r\n      .slice([0], [5]);\r\n    maxDead = summaryAray\r\n      .sort((b, a) => a.TotalDeaths - b.TotalDeaths)\r\n      .slice([0], [5]);\r\n    totalRecovered = summaryAray\r\n      .sort((b, a) => a.TotalRecovered - b.TotalRecovered)\r\n      .slice([0], [5]);\r\n  }\r\n  return (\r\n    <>\r\n      <div className={css.container}>\r\n        <div className={css.div_wrapper}>\r\n          <CovidItem\r\n            maxConfirmed={maxConfirmed}\r\n            maxDead={maxDead}\r\n            totalRecovered={totalRecovered}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}