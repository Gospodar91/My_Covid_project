{"ast":null,"code":"import axios from \"axios\";\nimport PNotify from \"pnotify/dist/es/PNotify.js\";\nconst KEY = \"15302072-a81be31270c5e4995077a81d4\";\nconst newsKey = \"65cb0b3a150c4ecfb6031d583c73fa16\";\nPNotify.defaults.delay = 2000;\nPNotify.defaults.width = '150px';\nexport const operations = {\n  async getSummary() {\n    try {\n      const data = await axios.get(`https://api.covid19api.com/summary`);\n      return data;\n    } catch (error) {\n      console.log(\"GetSummaryError\", error);\n      PNotify.error({\n        title: \"Sorry:\",\n        text: \"Server is overloaded\"\n      });\n      throw new Error();\n    }\n  },\n\n  async getFlag(searchQuery) {\n    try {\n      const data = await axios.get(`https://pixabay.com/api/?key=${KEY}&q=${searchQuery}+flag&per+page=3&image_type=photo`);\n\n      if (data.data.total === 0) {\n        PNotify.error({\n          title: \"Sorry:\",\n          text: \"Please write correct country\"\n        });\n      }\n\n      return data;\n    } catch (error) {\n      console.log(\"GetSummaryError\", error);\n      throw new Error();\n    }\n  },\n\n  async getNews() {\n    try {\n      const data = await axios.get(`https://newsapi.org/v2/everything?qInTitle=covid&language=en&pageSize=3&sortBy=publishedAt&apiKey=${newsKey}`);\n      return data;\n    } catch (error) {\n      console.log(\"GetNewsError\", error);\n      throw new Error();\n    }\n  },\n\n  async getSearchnews(country) {\n    try {\n      const data = await axios.get(`https://newsapi.org/v2/everything?qInTitle=covid+${country}&pageSize=3&sortBy=publishedAt&apiKey=${newsKey}`);\n\n      if (data.data.totalResults === 0) {\n        PNotify.error({\n          title: \"Sorry:\",\n          text: \"News are unavailable now\"\n        });\n      }\n\n      console.log('data', data);\n      return data;\n    } catch (error) {\n      console.log(\"GetNewsError\", error);\n      throw new Error();\n    }\n  }\n\n};","map":{"version":3,"sources":["E:/React/covid_project/covid_projest/src/components/covid19/operations/Operations.js"],"names":["axios","PNotify","KEY","newsKey","defaults","delay","width","operations","getSummary","data","get","error","console","log","title","text","Error","getFlag","searchQuery","total","getNews","getSearchnews","country","totalResults"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,MAAMC,GAAG,GAAG,oCAAZ;AACA,MAAMC,OAAO,GAAG,kCAAhB;AACAF,OAAO,CAACG,QAAR,CAAiBC,KAAjB,GAAyB,IAAzB;AACAJ,OAAO,CAACG,QAAR,CAAiBE,KAAjB,GAAyB,OAAzB;AACA,OAAO,MAAMC,UAAU,GAAG;AACxB,QAAMC,UAAN,GAAmB;AACjB,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,oCAAX,CAAnB;AACA,aAAOD,IAAP;AACD,KAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACAV,MAAAA,OAAO,CAACU,KAAR,CAAc;AACZG,QAAAA,KAAK,EAAE,QADK;AAEZC,QAAAA,IAAI,EAAE;AAFM,OAAd;AAIA,YAAM,IAAIC,KAAJ,EAAN;AACD;AACF,GAbuB;;AAexB,QAAMC,OAAN,CAAcC,WAAd,EAA2B;AACzB,QAAI;AACF,YAAMT,IAAI,GAAG,MAAMT,KAAK,CAACU,GAAN,CAChB,gCAA+BR,GAAI,MAAKgB,WAAY,mCADpC,CAAnB;;AAGA,UAAIT,IAAI,CAACA,IAAL,CAAUU,KAAV,KAAoB,CAAxB,EAA2B;AACzBlB,QAAAA,OAAO,CAACU,KAAR,CAAc;AACZG,UAAAA,KAAK,EAAE,QADK;AAEZC,UAAAA,IAAI,EAAE;AAFM,SAAd;AAID;;AAED,aAAON,IAAP;AACD,KAZD,CAYE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACA,YAAM,IAAIK,KAAJ,EAAN;AACD;AACF,GAhCuB;;AAkCxB,QAAMI,OAAN,GAAgB;AACd,QAAI;AACF,YAAMX,IAAI,GAAG,MAAMT,KAAK,CAACU,GAAN,CAChB,qGAAoGP,OAAQ,EAD5F,CAAnB;AAIA,aAAOM,IAAP;AACD,KAND,CAME,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,KAA5B;AACA,YAAM,IAAIK,KAAJ,EAAN;AACD;AACF,GA7CuB;;AA+CxB,QAAMK,aAAN,CAAoBC,OAApB,EAA6B;AAC3B,QAAI;AACF,YAAMb,IAAI,GAAG,MAAMT,KAAK,CAACU,GAAN,CAChB,oDAAmDY,OAAQ,yCAAwCnB,OAAQ,EAD3F,CAAnB;;AAGA,UAAIM,IAAI,CAACA,IAAL,CAAUc,YAAV,KAA2B,CAA/B,EAAkC;AAChCtB,QAAAA,OAAO,CAACU,KAAR,CAAc;AAAEG,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAAd;AACD;;AACDH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,IAApB;AACA,aAAOA,IAAP;AACD,KATD,CASE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,KAA5B;AACA,YAAM,IAAIK,KAAJ,EAAN;AACD;AACF;;AA7DuB,CAAnB","sourcesContent":["import axios from \"axios\";\r\nimport PNotify from \"pnotify/dist/es/PNotify.js\";\r\nconst KEY = \"15302072-a81be31270c5e4995077a81d4\";\r\nconst newsKey = \"65cb0b3a150c4ecfb6031d583c73fa16\";\r\nPNotify.defaults.delay = 2000;\r\nPNotify.defaults.width = '150px';\r\nexport const operations = {\r\n  async getSummary() {\r\n    try {\r\n      const data = await axios.get(`https://api.covid19api.com/summary`);\r\n      return data;\r\n    } catch (error) {\r\n      console.log(\"GetSummaryError\", error);\r\n      PNotify.error({\r\n        title: \"Sorry:\",\r\n        text: \"Server is overloaded\",\r\n      });\r\n      throw new Error();\r\n    }\r\n  },\r\n\r\n  async getFlag(searchQuery) {\r\n    try {\r\n      const data = await axios.get(\r\n        `https://pixabay.com/api/?key=${KEY}&q=${searchQuery}+flag&per+page=3&image_type=photo`\r\n      );\r\n      if (data.data.total === 0) {\r\n        PNotify.error({\r\n          title: \"Sorry:\",\r\n          text: \"Please write correct country\",\r\n        });\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.log(\"GetSummaryError\", error);\r\n      throw new Error();\r\n    }\r\n  },\r\n\r\n  async getNews() {\r\n    try {\r\n      const data = await axios.get(\r\n        `https://newsapi.org/v2/everything?qInTitle=covid&language=en&pageSize=3&sortBy=publishedAt&apiKey=${newsKey}`\r\n      );\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.log(\"GetNewsError\", error);\r\n      throw new Error();\r\n    }\r\n  },\r\n\r\n  async getSearchnews(country) {\r\n    try {\r\n      const data = await axios.get(\r\n        `https://newsapi.org/v2/everything?qInTitle=covid+${country}&pageSize=3&sortBy=publishedAt&apiKey=${newsKey}`\r\n      );\r\n      if (data.data.totalResults === 0) {\r\n        PNotify.error({ title: \"Sorry:\", text: \"News are unavailable now\" });\r\n      }\r\n      console.log('data', data)\r\n      return data;\r\n    } catch (error) {\r\n      console.log(\"GetNewsError\", error);\r\n      throw new Error();\r\n    }\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}