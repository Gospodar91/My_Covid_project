{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\covid_project\\\\covid_projest\\\\src\\\\components\\\\covid19\\\\homePage\\\\GlobalInfo.js\";\nimport React from \"react\";\nimport css from \"../homePage/homepage.module.css\";\nexport const GlobalInfo = ({ ...Global\n}) => {\n  console.log('Global', Global.Global);\n  return React.createElement(React.Fragment, null, Global && React.createElement(\"div\", {\n    className: css.homePageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: css.covidTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \" COVID-19 Latest info:\"), React.createElement(\"div\", {\n    className: css.totalCasesContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: css.totalCasesTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \" Total cases in the world:\"), React.createElement(\"p\", {\n    className: css.totConfirmed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Total Confirmed:\", React.createElement(\"span\", {\n    className: css.confirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, Global.TotalConfirmed.toLocaleString())), React.createElement(\"p\", {\n    className: css.totConfirmed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"New Confirmed cases :\", React.createElement(\"span\", {\n    className: css.confirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, Global.NewConfirmed.toLocaleString())), React.createElement(\"p\", {\n    className: css.totConfirmed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Total Deaths :\", React.createElement(\"span\", {\n    className: css.dead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, Global.TotalDeaths.toLocaleString())), React.createElement(\"p\", {\n    className: css.totConfirmed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"New Deaths :\", React.createElement(\"span\", {\n    className: css.dead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, Global.NewDeaths.toLocaleString())), React.createElement(\"p\", {\n    className: css.totConfirmed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Total Recovered :\", React.createElement(\"span\", {\n    className: css.alive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, Global.TotalRecovered.toLocaleString())), React.createElement(\"p\", {\n    className: css.totConfirmed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"New Recovered :\", React.createElement(\"span\", {\n    className: css.alive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, Global.NewRecovered.toLocaleString())), React.createElement(\"p\", {\n    className: css.totConfirmed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Last updated at :\", `${Date.substring(0, 10)} ${Date.substring(11, 19)}`, \" UTC\"))));\n};","map":{"version":3,"sources":["E:/React/covid_project/covid_projest/src/components/covid19/homePage/GlobalInfo.js"],"names":["React","css","GlobalInfo","Global","console","log","homePageContainer","covidTitle","totalCasesContainer","totalCasesTitle","totConfirmed","confirm","TotalConfirmed","toLocaleString","NewConfirmed","dead","TotalDeaths","NewDeaths","alive","TotalRecovered","NewRecovered","Date","substring"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,iCAAhB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAE,EAAC,GAAGC;AAAJ,CAAF,KAAmB;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAM,CAACA,MAA7B;AACA,SACE,0CACGA,MAAM,IACL;AAAK,IAAA,SAAS,EAAEF,GAAG,CAACK,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEL,GAAG,CAACM,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAK,IAAA,SAAS,EAAEN,GAAG,CAACO,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEP,GAAG,CAACQ,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAG,IAAA,SAAS,EAAER,GAAG,CAACS,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE;AAAM,IAAA,SAAS,EAAET,GAAG,CAACU,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,MAAM,CAACS,cAAP,CAAsBC,cAAtB,EADH,CAFF,CAFF,EAQE;AAAG,IAAA,SAAS,EAAEZ,GAAG,CAACS,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AAAM,IAAA,SAAS,EAAET,GAAG,CAACU,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,MAAM,CAACW,YAAP,CAAoBD,cAApB,EADH,CAFF,CARF,EAcE;AAAG,IAAA,SAAS,EAAEZ,GAAG,CAACS,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE;AAAM,IAAA,SAAS,EAAET,GAAG,CAACc,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,MAAM,CAACa,WAAP,CAAmBH,cAAnB,EADH,CAFF,CAdF,EAoBE;AAAG,IAAA,SAAS,EAAEZ,GAAG,CAACS,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AAAM,IAAA,SAAS,EAAET,GAAG,CAACc,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,MAAM,CAACc,SAAP,CAAiBJ,cAAjB,EADH,CAFF,CApBF,EA0BE;AAAG,IAAA,SAAS,EAAEZ,GAAG,CAACS,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AAAM,IAAA,SAAS,EAAET,GAAG,CAACiB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,MAAM,CAACgB,cAAP,CAAsBN,cAAtB,EADH,CAFF,CA1BF,EAgCE;AAAG,IAAA,SAAS,EAAEZ,GAAG,CAACS,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AAAM,IAAA,SAAS,EAAET,GAAG,CAACiB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,MAAM,CAACiB,YAAP,CAAoBP,cAApB,EADH,CAFF,CAhCF,EAsCE;AAAG,IAAA,SAAS,EAAEZ,GAAG,CAACS,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACqB,GAAEW,IAAI,CAACC,SAAL,CAAe,CAAf,EAAkB,EAAlB,CAAsB,IAAGD,IAAI,CAACC,SAAL,CAAe,EAAf,EAAmB,EAAnB,CAAuB,EADvE,SAtCF,CAFF,CAFJ,CADF;AAqDD,CAvDM","sourcesContent":["import React from \"react\";\r\nimport css from \"../homePage/homepage.module.css\";\r\n\r\nexport const GlobalInfo = ( {...Global} ) => {\r\n  console.log('Global', Global.Global)\r\n  return (\r\n    <>\r\n      {Global && (\r\n        <div className={css.homePageContainer}>\r\n          <h1 className={css.covidTitle}> COVID-19 Latest info:</h1>\r\n          <div className={css.totalCasesContainer}>\r\n            <h2 className={css.totalCasesTitle}> Total cases in the world:</h2>\r\n            <p className={css.totConfirmed}>\r\n              Total Confirmed:\r\n              <span className={css.confirm}>\r\n                {Global.TotalConfirmed.toLocaleString()}\r\n              </span>\r\n            </p>\r\n            <p className={css.totConfirmed}>\r\n              New Confirmed cases :\r\n              <span className={css.confirm}>\r\n                {Global.NewConfirmed.toLocaleString()}\r\n              </span>\r\n            </p>\r\n            <p className={css.totConfirmed}>\r\n              Total Deaths :\r\n              <span className={css.dead}>\r\n                {Global.TotalDeaths.toLocaleString()}\r\n              </span>\r\n            </p>\r\n            <p className={css.totConfirmed}>\r\n              New Deaths :\r\n              <span className={css.dead}>\r\n                {Global.NewDeaths.toLocaleString()}\r\n              </span>\r\n            </p>\r\n            <p className={css.totConfirmed}>\r\n              Total Recovered :\r\n              <span className={css.alive}>\r\n                {Global.TotalRecovered.toLocaleString()}\r\n              </span>\r\n            </p>\r\n            <p className={css.totConfirmed}>\r\n              New Recovered :\r\n              <span className={css.alive}>\r\n                {Global.NewRecovered.toLocaleString()}\r\n              </span>\r\n            </p>\r\n            <p className={css.totConfirmed}>\r\n              Last updated at :{`${Date.substring(0, 10)} ${Date.substring(11, 19)}`} UTC\r\n             \r\n              \r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}