{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\covid_project\\\\covid_projest\\\\src\\\\components\\\\covid19\\\\CovidItem\\\\CovidItem.js\";\nimport React from \"react\";\nimport css from \"../CovidItem/covidItem.module.css\";\n\nconst CovidItem = ({\n  maxConfirmed,\n  maxDead,\n  totalRecovered\n}) => {\n  console.log(\"maxDead\", maxDead);\n  return React.createElement(React.Fragment, null, maxConfirmed && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: css.infoFirst,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \" Top Total Cases\"), React.createElement(\"ul\", {\n    className: css.maxConfirmed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, maxConfirmed.map(country => React.createElement(\"li\", {\n    key: country.Country,\n    className: css.countryLi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.liDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: css.country,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, country.Country), React.createElement(\"p\", {\n    className: css.infoFirst,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Total cases:\", country.TotalConfirmed.toLocaleString()), React.createElement(\"p\", {\n    className: css.infoFirst,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"New cases:\", country.NewConfirmed.toLocaleString()), React.createElement(\"p\", {\n    className: css.infoSecond,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Total deaths:\", country.TotalDeaths.toLocaleString()), React.createElement(\"p\", {\n    className: css.infoSecond,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"New deaths:\", country.NewDeaths.toLocaleString()), React.createElement(\"p\", {\n    className: css.infoThird,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Total recovered:\", country.TotalRecovered.toLocaleString()), React.createElement(\"p\", {\n    className: css.infoThird,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"New recovered:\", country.NewRecovered.toLocaleString())), React.createElement(\"div\", {\n    className: css.latestNewsDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: css.infoSecond,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" Top Total Deaths\"), React.createElement(\"ul\", {\n    className: css.maxConfirmed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, maxDead.map(country => React.createElement(\"li\", {\n    key: country.Country,\n    className: css.countryLi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.liDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: css.country,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, country.Country), React.createElement(\"p\", {\n    className: css.infoSecond,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Total deaths:\", country.TotalDeaths.toLocaleString().toLocaleString()), React.createElement(\"p\", {\n    className: css.infoSecond,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"New deaths:\", country.NewDeaths.toLocaleString().toLocaleString()), React.createElement(\"p\", {\n    className: css.infoFirst,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Total cases:\", country.TotalConfirmed.toLocaleString().toLocaleString()), React.createElement(\"p\", {\n    className: css.infoFirst,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"New cases:\", country.NewConfirmed.toLocaleString().toLocaleString()), React.createElement(\"p\", {\n    className: css.infoThird,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Total recovered:\", country.TotalRecovered.toLocaleString().toLocaleString()), React.createElement(\"p\", {\n    className: css.infoThird,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"New recovered:\", country.NewRecovered.toLocaleString().toLocaleString())), React.createElement(\"div\", {\n    className: css.latestNewsDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: css.maxConfirmedDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: css.infoThird,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \" Top Total Recovered\"), React.createElement(\"ul\", {\n    className: css.maxConfirmed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, totalRecovered.map(country => React.createElement(\"li\", {\n    key: country.Country,\n    className: css.countryLi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css.liDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: css.country,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, country.Country), React.createElement(\"p\", {\n    className: css.infoThird,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Total recovered:\", country.TotalRecovered.toLocaleString()), React.createElement(\"p\", {\n    className: css.infoThird,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"New recovered:\", country.NewRecovered.toLocaleString()), React.createElement(\"p\", {\n    className: css.infoSecond,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Total deaths:\", country.TotalDeaths.toLocaleString()), React.createElement(\"p\", {\n    className: css.infoSecond,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"New deaths:\", country.NewDeaths.toLocaleString()), React.createElement(\"p\", {\n    className: css.infoFirst,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Total cases:\", country.TotalConfirmed.toLocaleString()), React.createElement(\"p\", {\n    className: css.infoFirst,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"New cases:\", country.NewConfirmed.toLocaleString()))))))));\n};\n\nexport default CovidItem;","map":{"version":3,"sources":["E:/React/covid_project/covid_projest/src/components/covid19/CovidItem/CovidItem.js"],"names":["React","css","CovidItem","maxConfirmed","maxDead","totalRecovered","console","log","infoFirst","map","country","Country","countryLi","liDiv","TotalConfirmed","toLocaleString","NewConfirmed","infoSecond","TotalDeaths","NewDeaths","infoThird","TotalRecovered","NewRecovered","latestNewsDiv","maxConfirmedDiv"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,mCAAhB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA;AAAzB,CAAD,KAA+C;AAC/DC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,OAAvB;AACA,SACE,0CACCD,YAAY,IACb,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAI,IAAA,SAAS,EAAEF,GAAG,CAACO,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE;AAAI,IAAA,SAAS,EAAEP,GAAG,CAACE,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,YAAY,CAACM,GAAb,CAAkBC,OAAD,IAChB;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,OAAjB;AAA0B,IAAA,SAAS,EAAEV,GAAG,CAACW,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEX,GAAG,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEZ,GAAG,CAACS,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,OAAO,CAACC,OAArC,CADF,EAEE;AAAG,IAAA,SAAS,EAAEV,GAAG,CAACO,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeE,OAAO,CAACI,cAAR,CAAuBC,cAAvB,EADf,CAFF,EAKE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACO,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaE,OAAO,CAACM,YAAR,CAAqBD,cAArB,EADb,CALF,EAQE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACgB,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgBP,OAAO,CAACQ,WAAR,CAAoBH,cAApB,EADhB,CARF,EAWE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACgB,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcP,OAAO,CAACS,SAAR,CAAkBJ,cAAlB,EADd,CAXF,EAcE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACmB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACmBV,OAAO,CAACW,cAAR,CAAuBN,cAAvB,EADnB,CAdF,EAiBE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACmB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBV,OAAO,CAACY,YAAR,CAAqBP,cAArB,EADjB,CAjBF,CADF,EAyBE;AAAK,IAAA,SAAS,EAAEd,GAAG,CAACsB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CADD,CADH,CAHF,CADF,EAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEtB,GAAG,CAACgB,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAI,IAAA,SAAS,EAAEhB,GAAG,CAACE,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACK,GAAR,CAAaC,OAAD,IACX;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,OAAjB;AAA0B,IAAA,SAAS,EAAEV,GAAG,CAACW,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEX,GAAG,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEZ,GAAG,CAACS,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,OAAO,CAACC,OAArC,CADF,EAEE;AAAG,IAAA,SAAS,EAAEV,GAAG,CAACgB,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEGP,OAAO,CAACQ,WAAR,CAAoBH,cAApB,GAAqCA,cAArC,EAFH,CAFF,EAME;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACgB,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEGP,OAAO,CAACS,SAAR,CAAkBJ,cAAlB,GAAmCA,cAAnC,EAFH,CANF,EAUE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACO,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEGE,OAAO,CAACI,cAAR,CAAuBC,cAAvB,GAAwCA,cAAxC,EAFH,CAVF,EAcE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACO,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEGE,OAAO,CAACM,YAAR,CAAqBD,cAArB,GAAsCA,cAAtC,EAFH,CAdF,EAkBE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACmB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEGV,OAAO,CAACW,cAAR,CAAuBN,cAAvB,GAAwCA,cAAxC,EAFH,CAlBF,EAsBE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACmB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEGV,OAAO,CAACY,YAAR,CAAqBP,cAArB,GAAsCA,cAAtC,EAFH,CAtBF,CADF,EA4BE;AAAK,IAAA,SAAS,EAAEd,GAAG,CAACsB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,CADD,CADH,CAFF,CApCF,EAyEE;AAAK,IAAA,SAAS,EAAEtB,GAAG,CAACuB,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEvB,GAAG,CAACmB,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAI,IAAA,SAAS,EAAEnB,GAAG,CAACE,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,cAAc,CAACI,GAAf,CAAoBC,OAAD,IAClB;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,OAAjB;AAA0B,IAAA,SAAS,EAAEV,GAAG,CAACW,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEX,GAAG,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEZ,GAAG,CAACS,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,OAAO,CAACC,OAArC,CADF,EAEE;AAAG,IAAA,SAAS,EAAEV,GAAG,CAACmB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACmBV,OAAO,CAACW,cAAR,CAAuBN,cAAvB,EADnB,CAFF,EAKE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACmB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBV,OAAO,CAACY,YAAR,CAAqBP,cAArB,EADjB,CALF,EAQE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACgB,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgBP,OAAO,CAACQ,WAAR,CAAoBH,cAApB,EADhB,CARF,EAWE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACgB,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcP,OAAO,CAACS,SAAR,CAAkBJ,cAAlB,EADd,CAXF,EAcE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACO,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeE,OAAO,CAACI,cAAR,CAAuBC,cAAvB,EADf,CAdF,EAiBE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACO,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaE,OAAO,CAACM,YAAR,CAAqBD,cAArB,EADb,CAjBF,CADF,CADD,CADH,CAFF,CAzEF,CAFA,CADF;AA8GD,CAhHD;;AAiHA,eAAeb,SAAf","sourcesContent":["import React from \"react\";\r\nimport css from \"../CovidItem/covidItem.module.css\";\r\n\r\nconst CovidItem = ({ maxConfirmed, maxDead, totalRecovered }) => {\r\n  console.log(\"maxDead\", maxDead);\r\n  return (\r\n    <> \r\n    {maxConfirmed&&\r\n    <>\r\n      <div>\r\n       \r\n        <h2 className={css.infoFirst}> Top Total Cases</h2>\r\n        <ul className={css.maxConfirmed}>\r\n          {maxConfirmed.map((country) => (\r\n            <li key={country.Country} className={css.countryLi}>\r\n              <div className={css.liDiv}>\r\n                <h2 className={css.country}>{country.Country}</h2>\r\n                <p className={css.infoFirst}>\r\n                  Total cases:{country.TotalConfirmed.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoFirst}>\r\n                  New cases:{country.NewConfirmed.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoSecond}>\r\n                  Total deaths:{country.TotalDeaths.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoSecond}>\r\n                  New deaths:{country.NewDeaths.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoThird}>\r\n                  Total recovered:{country.TotalRecovered.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoThird}>\r\n                  New recovered:{country.NewRecovered.toLocaleString()}\r\n                </p>\r\n          \r\n              </div>\r\n              \r\n\r\n              <div className={css.latestNewsDiv}></div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h2 className={css.infoSecond}> Top Total Deaths</h2>\r\n        <ul className={css.maxConfirmed}>\r\n          {maxDead.map((country) => (\r\n            <li key={country.Country} className={css.countryLi}>\r\n              <div className={css.liDiv}>\r\n                <h2 className={css.country}>{country.Country}</h2>\r\n                <p className={css.infoSecond}>\r\n                  Total deaths:\r\n                  {country.TotalDeaths.toLocaleString().toLocaleString()}\r\n                </p>\r\n                <p className={css.infoSecond}>\r\n                  New deaths:\r\n                  {country.NewDeaths.toLocaleString().toLocaleString()}\r\n                </p>\r\n                <p className={css.infoFirst}>\r\n                  Total cases:\r\n                  {country.TotalConfirmed.toLocaleString().toLocaleString()}\r\n                </p>\r\n                <p className={css.infoFirst}>\r\n                  New cases:\r\n                  {country.NewConfirmed.toLocaleString().toLocaleString()}\r\n                </p>\r\n                <p className={css.infoThird}>\r\n                  Total recovered:\r\n                  {country.TotalRecovered.toLocaleString().toLocaleString()}\r\n                </p>\r\n                <p className={css.infoThird}>\r\n                  New recovered:\r\n                  {country.NewRecovered.toLocaleString().toLocaleString()}\r\n                </p>\r\n              </div>\r\n              <div className={css.latestNewsDiv}></div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className={css.maxConfirmedDiv}>\r\n        <h2 className={css.infoThird}> Top Total Recovered</h2>\r\n        <ul className={css.maxConfirmed}>\r\n          {totalRecovered.map((country) => (\r\n            <li key={country.Country} className={css.countryLi}>\r\n              <div className={css.liDiv}>\r\n                <h2 className={css.country}>{country.Country}</h2>\r\n                <p className={css.infoThird}>\r\n                  Total recovered:{country.TotalRecovered.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoThird}>\r\n                  New recovered:{country.NewRecovered.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoSecond}>\r\n                  Total deaths:{country.TotalDeaths.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoSecond}>\r\n                  New deaths:{country.NewDeaths.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoFirst}>\r\n                  Total cases:{country.TotalConfirmed.toLocaleString()}\r\n                </p>\r\n                <p className={css.infoFirst}>\r\n                  New cases:{country.NewConfirmed.toLocaleString()}\r\n                </p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      </>\r\n    }\r\n    </>\r\n  );\r\n};\r\nexport default CovidItem;\r\n"]},"metadata":{},"sourceType":"module"}